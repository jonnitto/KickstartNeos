prototype(Queo.Forms:Field.Text) < prototype(Neos.Fusion:Component) {
    // API von aussen
    name = ''
    submittedArgument = ''
    validationMessages = ${[]}

    //optional
    //requrire
    labelText = ''
    name = ''
    type = ''
    isDisabled = false
    class = ${!this.validationMessages || Array.isEmpty(this.validationMessages) ? '' : 'is-invalid'}

    // labelText.@if.isTrue = true
    // @if.meineCondition = true

    // Internal implementation
//     <Neos.Fusion:Debug validation={props.submittedArgument}/>
    renderer = afx`
        <div class="form-group">
            <label>{props.labelText}
                <input name={"params[" + props.name + "]"} class={"form-control " + props.class} type={props.type} value={props.submittedArgument} disabled={props.isDiabled} disabled.@if.isDisabled={props.isDisabled}/>
                <Neos.Fusion:Loop items={props.validationMessages} itemName="validationMessage">
                    <div class="invalid-feedback">
                        {validationMessage}
                    </div>
                </Neos.Fusion:Loop>
            </label>
        </div>
    `
}
